# This is the main configuration file for the application.
# Don't edit this file directly. Instead change settings in application.conf
# ~~~~~

# Application configuration
# Enable fakeUser to bypass standard authentication in a development environment
application {
    base-url             =   "http://localhost:9000"
    base-url             =   ${?BASE_URL}
    discourse-url       =   "https://forums.spongepowered.org"
    discourse-cdn-url   =   "https://forums-cdn.spongepowered.org"

    uploads-dir = "uploads"
    uploads-dir = ${?UPLOADS_DIR}

    # Add a dot at the start of the url to trust all subdomains
    trusted-url-hosts     =   [ ".spongepowered.org" ]

    fake-user {
        enabled    =   false
        id         =   -1
        name       =   "Spongie"
        username   =   "Spongie"
        email      =   "spongie@spongepowered.org"
    }
}


# Play configuration
play {
    application.loader                 =   "OreApplicationLoader"
    i18n.langs                         =   [ "en", "en-US" ]
    evolutions.autocommit              =   false
    evolutions.db.default.autoApply    =   true
    ws.timeout.connection              =   10000ms

    filters {
        enabled                +=  play.filters.csp.CSPFilter
        csrf.body.bufferSize   =   1000000

        csp {
            directives = {
                block-all-mixed-content = ""
                script-src = ${play.filters.csp.nonce.pattern} "'self' https://forums.spongepowered.org https://forums-cdn.spongepowered.org"
                style-src = "'self' 'unsafe-inline' https://fonts.googleapis.com https://forums-cdn.spongepowered.org"
                img-src = "'self' data: https: http:"
                font-src = "'self' data: https://fonts.gstatic.com"
                frame-src = "https://forums.spongepowered.org"
                frame-ancestors = "'none'"
                report-uri = ${?CSP_REPORT_URI}
                report-to = ${?CSP_REPORT_TO}
            }
        }

        hosts {
            allowed = [".spongepowered.org", "localhost:9000", "localhost:9443"]
        }
    }

    http {
        secret.key                       =   "changeme"
        secret.key                       =   ${?APPLICATION_SECRET}
        session.maxAge                   =   28d # 4 weeks
        parser.maxDiskBuffer             =   2MiB
        parser.maxMemoryBuffer           =   1MiB
    }

    assets {
        path = "/public"
        urlPrefix = "/assets"
    }
}

auth {
    api {
        url = "http://localhost:8000"
        url = ${?SPONGE_AUTH_URL}
        avatar-url = ${auth.api.url}"/avatar/%s?size=120x120"
        key = "changeme"
        key = ${?SPONGE_AUTH_API_KEY}
        timeout = 10000ms

        breaker {
            max-failures =   5
            timeout      =   10s
            reset        =   5m
        }
    }

    sso {
        login-url = ${auth.api.url}"/sso/"
        signup-url = ${auth.api.url}"/sso/signup/"
        verify-url = ${auth.api.url}"/sso/sudo/"
        secret = "changeme"
        secret = ${?SPONGE_AUTH_SSO_SECRET}
        timeout = 2s
        reset = 10m
        apikey = "changeme"
        apikey = ${?SPONGE_AUTH_SSO_API_KEY}
    }
}

# Ore configuration
ore {
    debug       =  false
    debug-level =  3
    staging     =  true

    log-timings = false

    homepage {
        update-interval = 10m
    }

    channels {
        max-name-len = 15
        name-regex = "^[a-zA-Z0-9]+$"
        color-default = 7
        name-default = "Release"
    }

    pages {
        home-name = "Home"
        home-message = "Welcome to your new project!"
        min-len = 15
        max-len = 32000
        page-max-len = 75000
    }

    projects {
        max-name-len = 25
        max-pages = 50
        max-channels = 5
        init-load = 25
        init-version-load = 10
        max-desc-len = 120
        file-validate = true
        stale-age = 28d
        check-interval = 1h
        draft-expire = 1d
        user-grid-page-size = 30

        unsafe-download-max-age = 10m

        upload-max-size = 20MiB
    }

    users {
        stars-per-page = 5
        max-tagline-len = 100
        author-page-size = 25
        project-page-size = 5
    }

    orgs {
        enabled = true
        dummy-email-domain = "ore.spongepowered.org"
        create-limit = 5
    }

    queue {
        max-review-time = 1d
    }

    api {
        session {
            public-expiration = 3h
            expiration = 1h

            check-interval = 5m
        }
    }

   session {
     secure = false
     secure = ${?SECURE}
     max-age = ${play.http.session.maxAge}
   }

   platforms = [
     {
       name = "spongeapi"
       category = "sponge"
       category-priority = 0
       dependency-id = "spongeapi"
       url = "https://www.spongepowered.org/downloads/spongeforge"
       coarse-version-regex = """^(\d+)\.\d+(?:\.\d+)?(?:-SNAPSHOT)?(?:-[a-z0-9]{7,9})?"""
     }

     {
       name = "spongeforge"
       category = "sponge"
       category-priority = 2
       dependency-id = "spongeforge"
       url = "https://spongepowered.org/downloads"
       coarse-version-regex = """^\d+\.\d+\.\d+-\d+-(\d+)\.\d+\.\d+(?:(?:-BETA-\d+)|(?:-RC\d+))?$"""
     }

     {
       name = "spongevanilla"
       category = "sponge"
       category-priority = 2
       dependency-id = "spongevanilla"
       url = "https://www.spongepowered.org/downloads/spongevanilla"
       coarse-version-regex = """^\d+\.\d+(?:\.\d+)?-(\d+)\.\d+\.\d+(?:(?:-BETA-\d+)|(?:-RC\d+))?$"""
     }

     # SpongeCommon
     {
       name = "sponge"
       category = "sponge"
       category-priority = 1
       dependency-id = "sponge"
       url = "https://www.spongepowered.org/downloads"
     }

     {
       name = "lantern"
       category = "sponge"
       category-priority = 2
       dependency-id = "lantern"
       url = "https://www.lanternpowered.org/"
     }

     {
       name = "forge"
       category = "forge"
       category-priority = 0
       dependency-id = "forge"
       url = "https://files.minecraftforge.net/"
       coarse-version-regex = """^(?:\d+\.)?(\d+)\.\d+\.\d+$"""
     }
   ]

   loaders = {
     mcmodinfo = {include required("loaders/mcmodinfo.conf")}
     spongePluginsJson = {include required("loaders/spongePluginsJson.conf")}
     forgeToml = {include required("loaders/forgeToml.conf")}
   }
}

performance {
    nio-blocking-fibers = 32
}

mail {
    username           =   "example"
    username           =   ${?ORE_EMAIL_USER}
    email              =   "example@example.com"
    email              =   ${?ORE_EMAIL}
    password           =   "password"
    password           =   ${?ORE_EMAIL_PASSWORD}
    smtp.host          =   "smtp.gmail.com"
    smtp.host          =   ${?ORE_SMTP_HOST}
    smtp.port          =   465
    smtp.port          =   ${?ORE_SMTP_PORT}
    transport.protocol =   "smtps"                     // The outgoing transport protocol
    interval           =   30s                      // 30 seconds (millis)

    // Custom properties to be added to the Properties object that is passed to
    // the JavaMail session. These might vary from SMTP server to server. This
    // configuration is set up for GMail with "allow less secure apps" enabled in
    // the user settings.
    properties = {
        "mail.smtps.host"=${mail.smtp.host}
        "mail.smtp.port"=${mail.smtp.port}
        "mail.smtp.socketFactory.class"="javax.net.ssl.SSLSocketFactory"
        "mail.smtp.socketFactory.fallback"=false
        "mail.smtp.socketFactory.port"=${mail.smtp.port}
        "mail.smtp.smtps.auth"=true
        "mail.smtps.quitwait"=false
    }
}

# Slick configuration
slick.dbs.default {
    profile = "slick.jdbc.PostgresProfile$"
    db {
        driver = "org.postgresql.Driver"
        url = "jdbc:postgresql://localhost/ore"
        url = ${?JDBC_DATABASE_URL}
        user = "root"
        user = ${?JDBC_DATABASE_USERNAME}
        password = ""
        password = ${?JDBC_DATABASE_PASSWORD}
        connectionPool = "HikariCP"
        registerMbeans = true
        poolName = "ore-db"
    }
}

# Sponge stuff
sponge {
    logo = "https://www.spongepowered.org/assets/img/icons/spongie-mark.svg"
    service = "Ore"

    # Sponsors from high to low donation amounts
    sponsors = [
        {
          "name": "MC Server Hosting",
          "image": "images/sponsors/mcserverhosting.png",
          "link": "https://mcserverhosting.net/?ref=sponge"
        },
        {
          "name": "CreeperHost",
          "image": "images/sponsors/creeperhost.svg",
          "link": "https://billing.creeperhost.net/link.php?id=8"
        },
        {
          "name": "Triplequote",
          "image": "images/sponsors/triplequote_black.svg",
          "link": "https://triplequote.com/hydra"
        },
        {
          "name": "JetBrains",
          "image": "images/sponsors/jetbrains.svg",
          "link": "https://www.jetbrains.com/"
        },
        {
          "name": "YourKit",
          "image": "images/sponsors/yourkit.png",
          "link": "https://www.yourkit.com/"
        },
    ]
}
